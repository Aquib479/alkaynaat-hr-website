{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Desktop/Learning/alkaynaat-hr-website/src/component/ThemeToggle/ThemeToggle.js\";\nimport React, { useState } from 'react';\nconst ThemeToggle = () => {\n  const [isDarkMode, setDarkMode] = useState(false);\n  const toggleTheme = () => {\n    setDarkMode(!isDarkMode);\n    const body = document.body;\n    body.classList.toggle('active-dark');\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"theme-toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"switch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    checked: isDarkMode,\n    onChange: toggleTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"slider round\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"toggle-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }\n  }, isDarkMode ? 'Light Mode' : 'Dark Mode'));\n};\nexport default ThemeToggle;","map":{"version":3,"names":["React","useState","ThemeToggle","isDarkMode","setDarkMode","toggleTheme","body","document","classList","toggle","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange"],"sources":["/Users/apple/Desktop/Learning/alkaynaat-hr-website/src/component/ThemeToggle/ThemeToggle.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ThemeToggle = () => {\n    const [isDarkMode, setDarkMode] = useState(false);\n\n    const toggleTheme = () => {\n        setDarkMode(!isDarkMode);\n        const body = document.body;\n        body.classList.toggle('active-dark');\n    };\n\n    return (\n        <div className=\"theme-toggle\">\n            <label className=\"switch\">\n                <input type=\"checkbox\" checked={isDarkMode} onChange={toggleTheme} />\n                <span className=\"slider round\"></span>\n            </label>\n            <span className=\"toggle-label\">{isDarkMode ? 'Light Mode' : 'Dark Mode'}</span>\n        </div>\n    );\n};\n\nexport default ThemeToggle;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,MAAMC,WAAW,GAAGA,CAAA,KAAM;EACtB,MAAM,CAACC,UAAU,EAAEC,WAAW,CAAC,GAAGH,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMI,WAAW,GAAGA,CAAA,KAAM;IACtBD,WAAW,CAAC,CAACD,UAAU,CAAC;IACxB,MAAMG,IAAI,GAAGC,QAAQ,CAACD,IAAI;IAC1BA,IAAI,CAACE,SAAS,CAACC,MAAM,CAAC,aAAa,CAAC;EACxC,CAAC;EAED,oBACIT,KAAA,CAAAU,aAAA;IAAKC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACzBjB,KAAA,CAAAU,aAAA;IAAOC,SAAS,EAAC,QAAQ;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACrBjB,KAAA,CAAAU,aAAA;IAAOQ,IAAI,EAAC,UAAU;IAACC,OAAO,EAAEhB,UAAW;IAACiB,QAAQ,EAAEf,WAAY;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACrEjB,KAAA,CAAAU,aAAA;IAAMC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAO,CAClC,CAAC,eACRjB,KAAA,CAAAU,aAAA;IAAMC,SAAS,EAAC,cAAc;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEd,UAAU,GAAG,YAAY,GAAG,WAAkB,CAC7E,CAAC;AAEd,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module"}